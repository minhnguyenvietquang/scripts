//This is an indicator that is used for growth, momentum and value investment research, this tracks and showcases the TTM financials for every candlestick, and how much FCFF Yield % would this equate to.

//@version=5
indicator("TTM FCFF Yield %", precision = 2, format = format.percent)

//Define time-series
var frequency = input.string("FQ", 
                       title = "Frequency",
                       group = "Frequency Settings",
                       inline = 'tt', 
                       options = ["FY", "FQ", "FH"], 
                       tooltip = "Different stock exchanges around the world reports quartly, yearly or semi-annually.")

var frequencyY = input.string("FY", 
                       title = "Non-TTM Frequency",
                       group = "Frequency Settings",
                       inline = 'tt', 
                       options = ["FY", "FQ", "FH"], 
                       tooltip = "Different stock exchanges around the world reports quartly, yearly or semi-annually.")
ticker =  syminfo.tickerid

//Call financial data (I don't call Enterprise Valuation because it doesn't adjust daily for stock moves)
cashfOps = request.financial(ticker, "CASH_F_OPERATING_ACTIVITIES", "TTM")
totalShares = request.financial(ticker, "TOTAL_SHARES_OUTSTANDING", frequency)
netDebt = request.financial(ticker, "NET_DEBT", frequency)
cashEquivalents = request.financial(ticker, "CASH_N_EQUIVALENTS", frequency)
depreciationAmor = request.financial(ticker, "DEP_AMORT_EXP_INCOME_S", "TTM")
capitalExpend = request.financial(ticker, "CAPITAL_EXPENDITURES_FIXED_ASSETS", frequency)
changeNWC = request.financial(ticker, "CHANGES_IN_WORKING_CAPITAL", frequency)
//This will calculate the Market Capitalization for every candle
marketCap =  totalShares * close

//Calculating the Enterprise Value = Market Capitalization + Net Debt (which is Total Debt - Cash and Cash Equivalents)
enterpriseValue = marketCap + netDebt

//Calculating the FCFF = Cash from Operating Activities - CapEx (for fixed assets) - Change in NWC + Depreciation & Amortization (from Income Statement)
fcff = cashfOps + depreciationAmor - capitalExpend - changeNWC

//Calculate FCFF Yield = FCFF / Enterprise Value. With Enterprise Value = Market Capitalization + Net Debt

fcffYield = fcff / enterpriseValue * 100

//Plot data
plot(fcffYield, "FCFF Yield Net", color =  color.new(color.lime, 20), style =  plot.style_area, linewidth = 2  )

//This part belongs to the smoothed out graph over the period specifications in the Settings
//Get the variables for the smoothed out graph
cashfOpsY = request.financial(ticker, "CASH_F_OPERATING_ACTIVITIES", "TTM", barmerge.gaps_on)
totalSharesY = request.financial(ticker, "TOTAL_SHARES_OUTSTANDING", frequencyY, barmerge.gaps_on)
netDebtY = request.financial(ticker, "NET_DEBT", frequencyY, barmerge.gaps_on)
cashEquivalentsY = request.financial(ticker, "CASH_N_EQUIVALENTS", frequencyY, barmerge.gaps_on)
depreciationAmorY = request.financial(ticker, "DEP_AMORT_EXP_INCOME_S", "TTM", barmerge.gaps_on)
capitalExpendY = request.financial(ticker, "CAPITAL_EXPENDITURES_FIXED_ASSETS", frequencyY, barmerge.gaps_on)
changeNWCY = request.financial(ticker, "CHANGES_IN_WORKING_CAPITAL", frequencyY, barmerge.gaps_on)

//Calculate the EnterpriseValue for this indicator
enterpriseValueY = marketCap + netDebtY

//Calculate FCFF quarterly or yearly
fcffY = cashfOpsY + depreciationAmorY - capitalExpendY - changeNWCY
fcffYieldY = fcffY / enterpriseValueY * 100

//Plot the yearly data on the chart
plot(fcffYieldY, "FCFF Yield Net", color =  color.new(color.red, 20), style =  plot.style_line, linewidth = 2  )